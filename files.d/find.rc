#!/bin/bash

grepfile="grep -R -n -H -C 5 --exclude-dir={.git}"

# TODO: complete
find-text() {
    if [ -z "$1" ] || [ -z "$2" ]; then
        log_error "pattern/rootdir not provided"
        return 1
    else
        local pattern="$2"
        local rootdir="$1"
    fi
    if [ "$3" = "--max-depth" ] && [ -n "$4" ]; then
        local maxdepth="$4"
    else
        local maxdepth=""
    fi

    local excluded_dirs=(".obsidian" ".git")
    local cmd
    if [ -n "$maxdepth" ]; then
        cmd="find $rootdir"
    else
        cmd="find $rootdir -maxdepth $maxdepth"
    fi

    for dir in "${excluded_dirs[@]}"; do
        cmd+=" -not -path '*/$dir/*' -not -name '$dir'"
    done

    cmd+=" -type f -exec grep -Hn --color=auto -e '$pattern' {} +"
    eval "$cmd"
}

zzz="""
The find-text function should be completed by parsing the args.

Define a function that takes a directory and counts how many line of text existed upon how many
 number of files, and also say how much size it is.
"""

# TODO: buggy
count-content() {
    local rootdir="."
    local names=()
    local wc="words"
    while [[ $# -gt 0 ]]; do
        case $1 in
            --name)
                shift
                names+=("$1")
                shift
                ;;
            --wc)
                shift
                case $1 in
                    lines|words)
                        wc=$1
                        shift
                        ;;
                    *)
                        log_error "Invalid --wc value. Possible values are 'lines' or 'words'."
                        return 1
                        ;;
                esac
                ;;
            *)
                rootdir="$1"
                shift
                ;;
        esac
    done
    cmd="find $rootdir -type f"
    if [ "${#names[@]}" -ge 1 ]; then
        for name in ${names[@]}; do
            cmd+=" -name \"$name\""
        done
    fi
    if [ "$wc" = "words" ]; then
        cmd+=" -exec wc -w {} +"
    elif [ "$wc" = "lines" ]; then
        cmd+=" -exec wc -l {} +"
    fi
    numbers=$(eval "$cmd" | grep -v -E "^\s*[0-9]*total\s*$" | awk -F' ' '{print $1}' | grep -E "[0-9]*")

    local counter=0
    while IFS= read -r number; do
        counter=$((counter + number))
    done <<< "$numbers"
    echo "$counter"
}
